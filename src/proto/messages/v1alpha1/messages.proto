syntax = "proto3";

package messages.v1alpha1;

import "google/protobuf/timestamp.proto";

message MessageHeader {
  bool undo = 1;
}

message StreamMessage {
  string id = 1;
  MessageHeader header = 2;
  google.protobuf.Timestamp timestamp = 3;
  bytes payload = 4;
}

message GetNextMessagesRequest {
  // stream to read messages from
  string stream_id = 1;

  // if presented messages after this one are returned (not inclusive)
  string last_message_id = 2;

  // max number of messages to return
  int32 count = 3;
}

message GetNextMessagesResponse {
  repeated StreamMessage messages = 1;
}

message StreamMessagesRequest {
  // stream to read messages from
  string stream_id = 1;

  // if presented streams starts with messages after this one (not inclusive)
  string last_message_id = 2;
}

message StreamMessagesResponse {
  repeated StreamMessage messages = 1;
}

service MessagesService {
  // returns requested amount of messages starting from any message
  rpc GetNextMessages(GetNextMessagesRequest) returns (GetNextMessagesResponse) {}
  // returns existing messages as an undefinite stream starting from any message
  rpc StreamMessages(StreamMessagesRequest) returns (stream StreamMessagesResponse) {}
}